(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{482:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"bg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bg"}},[t._v("#")]),t._v(" BG")]),t._v(" "),s("ul",[s("li",[t._v("我是24届毕业生，原技术栈为 "),s("code",[t._v("C/C++")]),t._v(" 客户端相关，现在公司担任 "),s("code",[t._v("Go")]),t._v(" 后端开发助理工程师。")]),t._v(" "),s("li",[t._v("由于对 "),s("code",[t._v("Go")]),t._v(" 语言学习认识比较粗浅，因此希望通过笔记方式记录学习与思考。")]),t._v(" "),s("li",[t._v("本文，将站在从 "),s("code",[t._v("C++")]),t._v(" "),s("code",[t._v("OOP")]),t._v(" 理念，转 "),s("code",[t._v("Go")]),t._v(" 语言开发进行简单实践思考。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"思考结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考结论"}},[t._v("#")]),t._v(" 思考结论")]),t._v(" "),s("p",[t._v("经过在业务组几个月的摸爬滚打，算是能够使用Go语言进行基本的业务开发。回忆 "),s("code",[t._v("C++")]),t._v(" 学习的内容，与 "),s("code",[t._v("Go")]),t._v(" 语言业务开发后，得出如下思考总结：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("C++")]),t._v(" "),s("code",[t._v("OOP")]),t._v(" 的继承体系更多的表达 —— "),s("strong",[t._v("是什么")]),t._v("！")]),t._v(" "),s("li",[s("code",[t._v("Go")]),t._v(" 语言中更多表达 —— "),s("strong",[t._v("能做什么")]),t._v("！")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_1-理念转型-从类型层级到行为契约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理念转型-从类型层级到行为契约"}},[t._v("#")]),t._v(" 1. 理念转型：从类型层级到行为契约")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("维度")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("C++ OOP")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Go 接口")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("抽象单元")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类（class）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("接口（interface）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("关系定义")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("显式继承（class B ： class A）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("隐式实现（实现方法即满足接口）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("多态基石")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("虚函数表（编译器生成）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("接口方法表（itab，运行时动态生成）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("设计哲学")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("“是什么”（is-a关系）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("“能做什么”（行为契约）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("扩展性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("需修改基类（易破坏继承链）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("无需修改接口（新增行为即新接口）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("解耦程度")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类层级紧耦合")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("接口与实现完全分离")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-1-案例对比说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-案例对比说明"}},[t._v("#")]),t._v(" 1.1 "),s("strong",[t._v("案例对比说明")])]),t._v(" "),s("p",[t._v("案例对比：图形渲染")]),t._v(" "),s("blockquote",[s("p",[t._v("极简简化")])]),t._v(" "),s("ul",[s("li",[t._v("如下：在 "),s("code",[t._v("C++")]),t._v(" 中，如果我们想要抽象某些东西，一般会设计基类，并定义公共属性及其方法。通过继承的方式来补全对实际对象的定义。在使用中，如果存在多个不同的子类，支持通过...")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强耦合")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Shape"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shape"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多态调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("然而，在 "),s("code",[t._v("Go")]),t._v(" 语言中，是通过"),s("strong",[t._v("实现接口中定义的所有方法")]),t._v("，即：认为是对接口的实现！(鸭子类型)")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Drawer "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个具体类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Circle "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在的类型上实现接口中定义的方法，即：是对 Circle 对 Drawer 接口的实现！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c Circle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d Drawer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态派发")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-2-go-接口设计哲学-go-接口的底层本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-go-接口设计哲学-go-接口的底层本质"}},[t._v("#")]),t._v(" 1.2 "),s("strong",[t._v("Go 接口设计哲学 / Go 接口的底层本质")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Go")]),t._v(" 的接口是 "),s("strong",[t._v("隐式契约")]),t._v(" 与 "),s("strong",[t._v("鸭子类型")]),t._v(" 的结合：")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Writer "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任何拥有 Write 方法的类型自动满足 Writer 接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" NetworkSocket "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n NetworkSocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" DiskFile "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d DiskFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("对比 "),s("code",[t._v("C++")]),t._v(" 的核心差异")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("C++")]),t._v("：类型关系在编译期强制绑定（比如："),s("code",[t._v("Circle")]),t._v("必须是"),s("code",[t._v("Shape")]),t._v("的子类）")]),t._v(" "),s("li",[s("code",[t._v("Go")]),t._v("：行为匹配在运行是动态判断（只要你能"),s("code",[t._v("Draw")]),t._v("，你就是"),s("code",[t._v("Drawer")]),t._v("）")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-3-实战场景对比-跨数据源读取器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-实战场景对比-跨数据源读取器"}},[t._v("#")]),t._v(" 1.3 "),s("strong",[t._v("实战场景对比：跨数据源读取器")])]),t._v(" "),s("p",[s("strong",[t._v("C++ 实现")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataReader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("byte"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DatabaseReader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataReader")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("APIDataReader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataReader")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Go 实现")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Reader "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" DatebaseConn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db DatabaseConn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" HTTPFetcher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hf HTTPFetcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PrecessData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r Reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("如何拓展？可拓展性？")])]),t._v(" "),s("ul",[s("li",[t._v("如果业务上需要拓展 —— 新增：CloudStorageReader，Go语言相比之下，优势展现。\n"),s("ul",[s("li",[t._v("C++ 需继承基类（可能涉及已有代码修改）")]),t._v(" "),s("li",[t._v("Go 只需实现 Read() 方法（零侵入）")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-4-小结-思维转换的本质-go-接口的精髓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-小结-思维转换的本质-go-接口的精髓"}},[t._v("#")]),t._v(" 1.4 小结：思维转换的本质 / Go 接口的精髓")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("总结")]),t._v("：思维转换的本质")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("C++ OOP")]),t._v(" "),s("th",[t._v("Go Interface")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("设计时关注 "),s("strong",[t._v("类型血统")])]),t._v(" "),s("td",[t._v("设计时关注 "),s("strong",[t._v("行为能力")])])]),t._v(" "),s("tr",[s("td",[t._v("编译期强约束")]),t._v(" "),s("td",[t._v("运行时柔性适配")])]),t._v(" "),s("tr",[s("td",[t._v("适合复杂对象关系")]),t._v(" "),s("td",[t._v("适合轻量行为组合")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[s("code",[t._v("Go")]),t._v(" 接口的精髓")])])]),t._v(" "),s("blockquote",[s("p",[t._v('"如果它走起来像鸭子，叫起来像鸭子，那么它就是鸭子。"')])]),t._v(" "),s("p",[t._v("通过剥离类型与行为的强绑定，Go 用 "),s("strong",[t._v("接口组合")]),t._v(" 替代 "),s("strong",[t._v("继承链")]),t._v("，实现更高程度的模块化与可扩展性。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_2-工程实践中的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-工程实践中的差异"}},[t._v("#")]),t._v(" 2. 工程实践中的差异")]),t._v(" "),s("h3",{attrs:{id:"_2-1-关键名词解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-关键名词解释"}},[t._v("#")]),t._v(" 2.1 关键名词解释")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("虚函数表（vtable）")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("C++")]),t._v(" 多肽基石")]),t._v("：编译器为含虚函数的类生成静态表，存储函数指针。在对象内存布局包含vptr指针指向该表。")]),t._v(" "),s("li",[s("strong",[t._v("调用过程​")]),t._v("：obj->Draw() → 通过vptr找到vtable → 定位Draw()地址 → 跳转执行。")])])]),t._v(" "),s("li",[s("strong",[t._v("接口表（itab）")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("Go")]),t._v(" 动态派发核心")]),t._v("：运行时构建的结构体，包含接口类型、具体类型和方法地址映射。")]),t._v(" "),s("li",[s("strong",[t._v("内存布局")]),t._v("​：接口变量 = 数据指针 + itab指针（如 var d Drawer = Circle{}）。")])])]),t._v(" "),s("li",[s("strong",[t._v("非侵入式接口")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("Go")]),t._v(" 核心设计")]),t._v("​：类型无需声明实现接口，只需拥有同名方法即自动满足契约（鸭子类型）。")]),t._v(" "),s("li",[t._v("​"),s("strong",[t._v("对比")]),t._v("​："),s("code",[t._v("C++")]),t._v(" 需显式继承抽象基类（侵入式）。")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-2-接口设计-大而全-vs-小而精"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-接口设计-大而全-vs-小而精"}},[t._v("#")]),t._v(" 2.2 接口设计：大而全 vs 小而精")]),t._v(" "),s("h3",{attrs:{id:"_2-3-复用机制-组合-vs-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-复用机制-组合-vs-继承"}},[t._v("#")]),t._v(" 2.3 复用机制：组合 VS 继承")]),t._v(" "),s("h3",{attrs:{id:"_2-4-多态实现-侵入式-vs-非侵入式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-多态实现-侵入式-vs-非侵入式"}},[t._v("#")]),t._v(" 2.4 多态实现：侵入式 VS 非侵入式")]),t._v(" "),s("h3",{attrs:{id:"_2-5-错误处理-异常-vs-显式返回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-错误处理-异常-vs-显式返回"}},[t._v("#")]),t._v(" 2.5 错误处理：异常 VS 显式返回")]),t._v(" "),s("h3",{attrs:{id:"_2-6-并发模型-线程锁-vs-通信顺序进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-并发模型-线程锁-vs-通信顺序进程"}},[t._v("#")]),t._v(" 2.6 并发模型：线程锁 vs 通信顺序进程")]),t._v(" "),s("hr"),t._v(" "),s("LastUpdated")],1)}),[],!1,null,null,null);s.default=e.exports}}]);